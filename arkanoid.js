(()=>{"use strict";const t=JSON.parse('{"lv1":{"levelNumber":1,"ballSpeed":200,"paddleWidthRation":0.2,"paddleHeightRation":0.04,"map":[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,4,4,4,0,0,0],[0,0,0,4,2,4,0,0,0],[0,0,0,4,4,4,0,0,0]]},"lv2":{"levelNumber":2,"ballSpeed":200,"paddleWidthRation":0.2,"paddleHeightRation":0.04,"map":[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1],[5,5,5,5,5,5,5,5,5],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,3,3,0,0,0,3,3,0]]},"lv3":{"levelNumber":3,"ballSpeed":200,"paddleWidthRation":0.2,"paddleHeightRation":0.04,"map":[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[2,0,2,2,0,2,2,0,2],[3,1,3,3,1,3,3,1,3]]}}'),s=JSON.parse('{"1":{"color":"rgb(110, 201, 251)","hardness":2,"points":2},"2":{"color":"#FF102Aff","hardness":2,"points":2},"3":{"color":"grey","hardness":-1},"4":{"color":"yellow","hardness":1,"points":1},"5":{"color":"white","hardness":1,"points":1}}');class i{constructor({levelNumber:t,ballSpeed:s,paddleWidthRation:i,paddleHeightRation:e,map:a}){this.levelNumber=t,this.ballSpeed=s,this.paddleWidthRation=i,this.paddleHeightRation=e,this.map=a}}class e{constructor(t,s,i,e,a){this.radius=t,this.x=s,this.y=i,this.dx=e,this.dy=a,this.ballImg=new Image,this.ballImg.src="./assets/images/ball.png",this.plankImpactSound=new Audio("./assets/sonds/plankImpact.wav"),this.blockImpactSound=new Audio("./assets/sonds/blockImpact.wav"),this.plankImpactSound.load(),this.blockImpactSound.load()}draw(t){t.drawImage(this.ballImg,this.x-this.radius,this.y-this.radius,2*this.radius,2*this.radius),t.shadowColor="rgba(0, 0, 0, 0.5)",t.shadowBlur=10,t.shadowOffsetX=-this.dx/30,t.shadowOffsetY=-this.dy/30,t.fill(),t.shadowColor="transparent"}playPlankImpactSound(){this.plankImpactSound.play(),this.plankImpactSound.currentTime=0}playBlockImpactSound(){this.blockImpactSound.play(),this.blockImpactSound.currentTime=0}}class a{constructor(t,s,i,e){this.width=t,this.height=s,this.x=i,this.y=e,this.vx=0,this.moving=!1,this.color="black",this.plankImg=new Image,this.plankImg.src="./assets/images/plank.png",this.plankImg.onload=()=>{this.plankLoaded=!0}}draw(t,s){t.drawImage(this.plankImg,this.x,this.y,this.width,this.height)}move(t,s,i){var e,a,h;this.x=(e=this.x+t*this.vx*1.1,a=i-10,h=s-this.width-i+10,Math.min(Math.max(e,a),h))}startMotion(t){this.moving=!0,this.vx="right"===t?1:-1}stopMotion(){this.moving=!1,this.vx=0}}class h{constructor(t,s,i,e,a,h,l){this.x=t,this.y=s,this.width=i,this.height=e,this.color=a,this.hardness=h,this.point=l}draw(t){t.beginPath(),t.fillStyle="black",t.rect(this.x,this.y,this.width,this.height),t.fill(),t.beginPath(),t.fillStyle=this.color,t.rect(this.x+2,this.y+2,this.width-4,this.height-4),t.fill()}}class l{constructor(t,i,e,a,l){this.blocks=[],this.mapTemplate=l;for(let l=0;l<this.mapTemplate.length;l++){const n=(t-2*e)/this.mapTemplate[l].length,o=(i-a)/20;for(let t=0;t<this.mapTemplate[l].length;t++)if(0!==this.mapTemplate[l][t]){const i=s[this.mapTemplate[l][t]];this.blocks.push(new h(e+t*n,a+l*o,n,o,i.color,i.hardness,i.points))}}}draw(t){const s=this.blocks.filter((t=>0!==t.hardness));for(const i of s)i.draw(t)}}class n{constructor(t){this.canvas=t,this.ctx=t.getContext("2d"),this.ctx.imageSmoothingEnabled=!1,this.gameOverSound=new Audio("./assets/sonds/gameOver.mp3"),this.gameOverSound.load(),this.winSound=new Audio("./assets/sonds/win.mp3"),this.winSound.load(),this.newLevelSound=new Audio("./assets/sonds/newLevel.mp3"),this.newLevelSound.load(),this.topMaring=37,this.sideMaring=37,this.map=null,this.plank=null,this.ball=null,this.win=!1,this.gameOver=!1,this.remaningLifes=2,this.resetScore(),this.highScore=localStorage.getItem("highScore")??0,this.displayBestScore(),this.initLevel(1),this.lastTouchX=null}restartGame(){this.win=!1,this.gameOver=!1,this.remaningLifes=2,this.resetScore(),this.initLevel(1)}initLevel(s){const e="lv"+s;this.level=new i(t[e]),this.backgroundImg=new Image,this.backgroundImg.src="./assets/images/backgrounds/background"+this.level.levelNumber+".png",this.backgroundImg.onload=()=>{this.backgroundLoaded=!0},this.map=new l(this.canvas.width,this.canvas.height,this.sideMaring,this.topMaring,this.level.map),this.initPlankAndBall(),this.gameInProgress=!1,this.displayLevelNumber(),"lv1"!==e&&this.newLevelSound.play(),this.gameStartTime=null}initPlankAndBall(){const t=this.canvas.width*this.level.paddleWidthRation,s=this.canvas.height*this.level.paddleHeightRation,i=this.canvas.width/2-t/2,h=this.canvas.height-50-s;this.plank=new a(t,s,i,h);const l=s/4,n=this.canvas.width/2,o=this.canvas.height-50-s-l;this.ball=new e(l,n,o,0,0)}start(){this.gameInProgress||(this.ball.dx=5*Math.random(),this.ball.dy=-Math.sqrt(this.level.ballSpeed-this.ball.dx**2),this.gameInProgress=!0,this.gameStartTime||(this.gameStartTime=Date.now()))}displayScore(){document.getElementById("scoreValue").textContent=this.score}displayBestScore(){document.getElementById("highScoreValue").textContent=this.highScore}displayLevelNumber(){document.getElementById("levelValue").textContent=this.level.levelNumber}resetScore(){this.score=0,document.getElementById("scoreValue").textContent=this.score}newLife(){this.remaningLifes-=1,this.gameInProgress=!1,this.initPlankAndBall()}drawLifes(){let t=this.sideMaring;const s=this.canvas.height-30;for(let i=0;i<this.remaningLifes;i++)this.ctx.drawImage(this.plank.plankImg,t,s,100,30),t+=100}displayEndGame(t){this.ctx.font="58px MyWebFont",this.ctx.textAlign="center",this.ctx.fillStyle="white",this.ctx.fillText(t,this.canvas.width/2,this.canvas.height/2)}displayRestartButton(t){this.ctx.font="40px MyWebFont",this.ctx.fillStyle=`rgba(255, 255, 255, ${t})`,this.ctx.fillText("Click to restart",this.canvas.width/2,this.canvas.height/1.6)}render(){if(this.win)return;if(this.gameOver){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.backgroundLoaded&&this.ctx.drawImage(this.backgroundImg,0,0,this.canvas.width,this.canvas.height),this.map.draw(this.ctx),this.ball.draw(this.ctx),this.plank.draw(this.ctx,this.canvas.height),this.drawLifes(),this.displayEndGame("GAME OVER");const t=2e3,s=performance.now()%t/t,i=Math.abs(Math.cos(s*Math.PI));return void this.displayRestartButton(i)}if(0===this.map.blocks.filter((t=>t.hardness>0)).length){if(this.level.levelNumber++,void 0===t["lv"+this.level.levelNumber])return this.win=!0,this.displayEndGame("YOU WIN"),void this.winSound.play();this.initLevel(this.level.levelNumber)}this.ball.y+this.ball.radius<=this.plank.y?(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.backgroundLoaded&&this.ctx.drawImage(this.backgroundImg,0,0,this.canvas.width,this.canvas.height),this.motion(this.map,this.plank),this.map.draw(this.ctx),this.ball.draw(this.ctx),this.plank.draw(this.ctx,this.canvas.height),this.drawLifes()):this.remaningLifes>0?this.newLife():(this.gameOver=!0,this.gameOverSound.play())}motion(){this.ball.y+this.ball.dy-this.ball.radius-this.topMaring<0&&(this.ball.dy=-this.ball.dy),this.blockCollision(),this.collision(this.plank,this.ball)&&this.ball.dy>0&&(this.ball.dy=-this.ball.dy,this.ball.dx=.06*(this.ball.x-(this.plank.x+this.plank.width/2)),this.ball.playPlankImpactSound()),(this.ball.x+this.ball.dx+this.ball.radius+this.sideMaring>this.canvas.width||this.ball.x+this.ball.dx-this.ball.radius-this.sideMaring<0)&&(this.ball.dx=-this.ball.dx),this.ball.x+=this.ball.dx,this.ball.y+=this.ball.dy}blockCollision(){const t=this.getCollisedBlock();if(void 0!==t&&(t.x<=this.ball.x&&this.ball.x<=t.x+t.width?(this.ball.y-=this.ball.dy,this.ball.dy*=-1):(this.ball.x-=this.ball.dx,this.ball.dx*=-1),-1!==t.hardness&&(t.hardness-=1,this.ball.playBlockImpactSound()),0===t.hardness)){const s=(Date.now()-this.gameStartTime)/1e3,i=Math.max(1,Math.round((60-s)/6));this.score+=t.point*i,this.score>this.highScore&&(this.highScore=this.score,localStorage.setItem("highScore",this.highScore),this.displayBestScore())}}getCollisedBlock(){const t=[];let s=null;const i=this.map.blocks.filter((t=>0!==t.hardness));for(const s of i)this.collision(s,this.ball)&&t.push(s);if(t.length<=1)s=t[0];else{const i={x:this.ball.x-this.ball.dx,y:this.ball.y-this.ball.dy};s=this.getClosestBlock(i,t)}return s}getClosestBlock(t,s){const i=[];for(const e of s){const s=Math.abs(e.x+e.width/2-t.x),a=Math.abs(e.y+e.height/2-t.y),h=Math.sqrt(s**2+a**2);i.push({distToRectangle:h,block:e})}return i.reduce(((t,s)=>s.distToRectangle<t.distToRectangle?s:t)).block}collision(t,s){const i=Math.abs(t.x+t.width/2-s.x),e=Math.abs(t.y+t.height/2-s.y);return i<=s.radius+t.width/2&&e<=s.radius+t.height/2}updatePlank(t){if(this.plank.moving){this.lastTimestamp||(this.lastTimestamp=t);const s=t-this.lastTimestamp;this.plank.move(s,this.canvas.width,this.sideMaring),this.gameInProgress||(this.ball.x=this.plank.x+this.plank.width/2),this.lastTimestamp=t,requestAnimationFrame(this.updatePlank.bind(this))}else this.lastTimestamp=null}handleKeyDown(t){this.win||(this.gameOver&&"Enter"===t.key?this.restartGame():("ArrowRight"!==t.key&&"ArrowLeft"!==t.key||(this.plank.startMotion("ArrowRight"===t.key?"right":"left"),requestAnimationFrame(this.updatePlank.bind(this))),"ArrowUp"===t.key&&this.start()))}handleKeyUp(t){"ArrowRight"!==t.key&&"ArrowLeft"!==t.key||this.plank.stopMotion()}handleTouchDirection(t,s){const i=t.touches[0].clientX,e=s.plank;if(null!==this.lastTouchX){const t=i-this.lastTouchX;t>0?(e.startMotion("right"),requestAnimationFrame(this.updatePlank.bind(this))):t<0&&(e.startMotion("left"),requestAnimationFrame(this.updatePlank.bind(this)))}this.lastTouchX=i}}document.addEventListener("DOMContentLoaded",(()=>{const t=document.getElementById("arkanoid"),s=new n(t);setInterval(s.render.bind(s),1e3/60),setInterval((()=>{s.gameInProgress&&s.displayScore()}),1e3/30),addEventListener("keydown",s.handleKeyDown.bind(s)),addEventListener("keyup",s.handleKeyUp.bind(s)),addEventListener("click",(i=>{const e=t.getBoundingClientRect(),a=i.clientX-e.left,h=i.clientY-e.top;a>=0&&a<=t.width&&h>=0&&h<=t.height&&s.gameOver&&s.restartGame()})),document.addEventListener("touchstart",(t=>{s.lastTouchX=t.touches[0].clientX,s.start()})),document.addEventListener("touchmove",(t=>{s.handleTouchDirection(t,s)})),document.addEventListener("touchend",(()=>{s.lastTouchX=null})),document.addEventListener("touchend",(()=>{s.plank.stopMotion()}))}))})();